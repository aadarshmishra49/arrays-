problem -- Find a triplet that sum to a given value
link -- https://www.geeksforgeeks.org/find-a-triplet-that-sum-to-a-given-value/

code -- 

bool find3Numbers(int A[], int arr_size, int sum) 
{
    
    for (int i = 0; i < arr_size - 2; i++)
    { 
 
        for (int j = i + 1; j < arr_size - 1; j++)
        { 
            for (int k = j + 1; k < arr_size; k++)
            { 
                if (A[i] + A[j] + A[k] == sum)
                { 
                    cout << "Triplet is " << A[i] <<
                        ", " << A[j] << ", " << A[k]; 
                    return true; 
                } 
            } 
        } 
    } 
  
    return false; 
} 
Time Complexity: O(n3). 

Space Complexity: O(1). 

2nd code -- using sorting 

bool find3Numbers(int A[], int arr_size, int sum)
{
    int l, r;
   
    sort(A, A + arr_size);
   
    for (int i = 0; i < arr_size - 2; i++) {
  
        l = i + 1; 
        r = arr_size - 1; 
        while (l < r) {
            if (A[i] + A[l] + A[r] == sum) {
                printf("Triplet is %d, %d, %d", A[i], A[l],A[r]);
                return true;
            }
            else if (A[i] + A[l] + A[r] < sum)
                l++;
            else 
                r--;
        }
    }
    
    return false;
}

Time Complexity: O(n2). 

Space Complexity: O(1). 
